<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.facechange=0
xx=view_xview[view_current]
yy=view_yview[view_current]
//xx=round(xx)
//yy=round(yy)
if instance_exists (obj_mainchara)
if obj_mainchara.y &gt; yy+130 then 
    {
     if global.facechoice != 0 then
     {
     writer = instance_create(xx+68,yy-5,OBJ_WRITER)
     script_execute(scr_facechoice)
     }
    else
     writer = instance_create(xx+10,yy-5,OBJ_WRITER)
    }
  else
    {
    if global.facechoice != 0 then
     {
     writer = instance_create(xx+68,yy+150,OBJ_WRITER)
     script_execute(scr_facechoice)
     }
    else
    writer = instance_create(xx+10,yy+150,OBJ_WRITER)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>while instance_exists(obj_face) = true
{
  with obj_face instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(writer) = false then instance_destroy()
else
if keyboard_check_pressed(vk_shift)  then
{
if writer.halt=0
if global.typer!=10
writer.stringpos = string_length(writer.originalstring)
keyboard_clear(vk_shift)
}

if global.facechange=1 and global.facechoice=0 then
   {
      writer.x=xx+30
     writer.writingx=writer.x
     while instance_exists(obj_face) = true
     {
      with obj_face instance_destroy()
     }
     global.facechange=0
   }

if global.facechange=1
    {
     writer.x=xx+68
     writer.writingx=(writer.x+20)
     script_execute(scr_facechoice)
     global.facechange=0 
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists (obj_mainchara)
if obj_mainchara.y &gt; yy+130 then 
{
draw_set_color(c_white)
draw_rectangle(view_xview[view_current]+16,view_yview[view_current]+5,view_xview[view_current]+304,view_yview[view_current]+80,false)

draw_set_color(c_black)
draw_rectangle(view_xview[view_current]+19,view_yview[view_current]+8,view_xview[view_current]+301,view_yview[view_current]+77,false)
}
else
{
draw_set_color(c_white)
draw_rectangle(view_xview[view_current]+16,view_yview[view_current]+160,view_xview[view_current]+304,view_yview[view_current]+235,false)

draw_set_color(c_black)
draw_rectangle(view_xview[view_current]+19,view_yview[view_current]+163,view_xview[view_current]+301,view_yview[view_current]+232,false)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
